body{
  
}

#eventwindow{
    position: absolute;
    width: 90vh;
    height: 90vh;
    transform: translate(-50%, -50%);
    top: 50%;
    left: 50%;
    align-items: baseline;
  }

#glitch_container {
  position: absolute;
  width: 100vh;
  height: 100%;
  top: 800px;
  bottom: 0;
  text-align: center;
  font-size: .5em;
}

#max-height{
  max-height: 1080px;  
}

#teamlogo{
  margin-top: 275px;
  width: 100%;
  height: 600px;
}

#pic{
  object-fit: contain;
  padding: 50px;
  width: 100%;
  max-height: 100%;
}


#logoview {
  zoom: 2;  //increase if you have very small images

  display: block;
  margin: auto;

  height: auto;
  max-height: 100%;

  width: auto;
  max-width: 100%;
}

#text-top{
  text-align: center;
  width: 100vh;
  font-size: 3em;
}

#text-bottom{
  position: absolute;
  font-size: 1.2em;
  width: 100vh;
  top: 20px;
  text-align: center;
}

// Here's the meat and potatoes.

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
@mixin glitchCopy { 
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch {
position: relative;
color: rgb(48, 144, 212);
font-size: 12em;
letter-spacing: .2em;
/* Animation provies a slight random skew. Check bottom of doc
for more information on how to random skew. */
animation: glitch-skew 1s infinite linear alternate-reverse;

// Creates a copy before our text. 
&::before{
  // Duplicates our text with the mixin.
  @include glitchCopy;
  // Scoots text slightly to the left for the color offset.
  left: 20px;
  // Creates the color 'shadow' that happens on the glitch.
  text-shadow: -20px 0 #097DC4;
  /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */
  clip: rect(44px, 450px, 56px, 0);
  /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
  animation: glitch-anim 5s infinite linear alternate-reverse;
}

// Creates a copy after our text. Note comments from ::before.
&::after {
  @include glitchCopy;
  left: -20px;
  text-shadow: -20px 0 rgb(102, 196, 199), 2px 2px rgb(45, 161, 233);
  animation: glitch-anim2 1s infinite linear alternate-reverse;
}
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
$steps: 20;
@for $i from 0 through $steps {
  #{percentage($i*(1/$steps))} {
    clip: rect(random(1000)+px, 9999px, random(1000)+px, 0);
    transform: skew((random(1000) / 1000) + deg);
  }
}
}

// Same deal, just duplicated for ultra randomness.
@keyframes glitch-anim2 {
$steps: 20;
@for $i from 0 through $steps {
  #{percentage($i*(1/$steps))} {
    clip: rect(random(1000)+px, 9999px, random(1000)+px, 0);
    transform: skew((random(1000) / 1000) + deg);
  }
}
}

// Does the same deal as before, but now only skews. Used for main text.
@keyframes glitch-skew {
$steps: 10;
@for $i from 0 through $steps {
  #{percentage($i*(1/$steps))} {
    transform: skew((random(10) - 5) + deg);
  }
}
}